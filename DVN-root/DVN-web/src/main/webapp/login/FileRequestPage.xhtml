<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ice="http://www.icesoft.com/icefaces/component">
    <h:head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    </h:head>
    <h:body>
        <ui:composition template="/template.xhtml">
            <ui:param name="pageTitle" value="Request Access to File - #{VDCRequest.dataversePageTitle}"/>
            <ui:define name="metadata">
                <f:metadata>
                    <f:viewParam name="studyId" value ="#{FileRequestPage.studyId}"/>
                    <f:viewParam name="fileId" value ="#{FileRequestPage.fileId}"/>                    
                    <f:event type="preRenderView" listener="#{FileRequestPage.preRenderView}" />
                </f:metadata>
            </ui:define>
            <ui:define name="body">
                <script type="text/javascript">
                    // <![CDATA[
                    function sendFileRequest() {
                        var fileIdStr = "";
                        var fileCBs = getElementsByClassName("iceSelBoolChkbx fileCheckBox", document.body);
                        for (var i = 0; i < fileCBs.length; i++) {
                            if ( fileCBs[i].checked ) {
                                if (fileIdStr != "") {
                                    fileIdStr = fileIdStr + ",";
                                }
                                fileIdStr = fileIdStr + fileCBs[i].previousSibling.value;
                            }
                        }
                        if (fileIdStr == "") {
                            alert ("No files selected");
                            return false;
                        }
                        document.getElementById('fileRequestForm:fileIdLists').value= fileIdStr;
                        return true; //
                    }
                    function getElementsByClassName( strClassName, obj ) {
                        var ar = arguments[2] || new Array();
                        var re = new RegExp("\\b" + strClassName + "\\b", "g");
                        if ( re.test(obj.className) ) {
                            ar.push( obj );
                        }
                        for ( var i = 0; i < obj.childNodes.length; i++ )
                            getElementsByClassName( strClassName, obj.childNodes[i], ar );
                        return ar;              
                    }
                    function toggleCheckBoxes( elem ) {
                        var catCBs = getElementsByClassName("catCheckBox", document.body);
                        var studyCBs = getElementsByClassName("studyCheckBox", document.body);
                        var fileCBs = getElementsByClassName("fileCheckBox", document.body);

                        if (elem.id.indexOf('fileCheckBox') > -1) {
                            if (!elem.checked) {
                                fileCatIndex = findCatIndex(elem.id);
                                // deselect corresponding catCheckBox and studyCheckBox
                                for (var i = 0; i < catCBs.length; i++) {
                                    if ( fileCatIndex == findCatIndex(catCBs[i].id) )  {
                                        catCBs[i].checked = elem.checked;
                                    }
                                }
                                for (var i = 0; i < studyCBs.length; i++) {
                                    studyCBs[i].checked = elem.checked;
                                }
                            }
                        } else if (elem.id.indexOf('catCheckBox') > -1) {
                            catIndex = findCatIndex(elem.id);
                            for (var i = 0; i < fileCBs.length; i++) {
                                if ( !fileCBs[i].disabled && catIndex == findCatIndex(fileCBs[i].id)  )  {
                                    fileCBs[i].checked = elem.checked;
                                }
                            }
                            if (!elem.checked) {
                                // deselect studyCheckBox
                                for (var i = 0; i < studyCBs.length; i++) {
                                    studyCBs[i].checked = elem.checked;
                                }
                            }

                        } else if (elem.id.indexOf('studyCheckBox') > -1) {
                            for (var i = 0; i < catCBs.length; i++) {
                                if ( !catCBs[i].disabled ) {
                                    catCBs[i].checked = elem.checked;
                                }
                            }
                            for (var i = 0; i < fileCBs.length; i++) {
                                if ( !fileCBs[i].disabled ) {
                                    fileCBs[i].checked = elem.checked;
                                }
                            }
                        }
                        if (elem.checked) {
                            jQuery('input[id$=submitButton]').prop("disabled", false);
                        } else {
                            checkButton();
                        }
                    }
                        
                    function checkButton() {
                        var fileCBs = getElementsByClassName("fileCheckBox", document.body);
                        var anySelected = false;

                        for (var i = 0; i < fileCBs.length; i++) {
                            if ( fileCBs[i].checked )  {
                                anySelected = true;
                            }
                        }

                        if (anySelected) {
                            jQuery('input[id$=submitButton]').prop("disabled", false);
                            return false;
                        } else {
                            jQuery('input[id$=submitButton]').prop("disabled", true);
                            return true;
                        }
                    }
                        
                        
                    function findCatIndex(id) {
                        startIndex = id.indexOf("catDataTable:") + 13;
                        endIndex = id.indexOf(":", startIndex);
                        return id.substring(startIndex, endIndex);
                    }      
                    // ]]>
                </script>
                <ice:form id="fileRequestForm">
                    <ice:inputHidden id="vdcId" value="#{VDCRequest.currentVDCId}"/>
                    <ice:inputHidden value="test"/>
                    <ice:inputHidden value="test"/>
                    <div class="dvn_section">
                        <div class="dvn_sectionTitle">
                            <ice:outputText value="Request Access to Restricted File"/>
                        </div>
                        <div class="dvn_sectionBox">
                            <div class="dvn_margin12">
                                <div jsfc="ice:panelGroup" id="layoutPanel2" panelLayout="flow" rendered="#{!FileRequestPage.studyUI.anyFileRestricted}">
                                    <ice:graphicImage value="/resources/images/icon_info.gif" styleClass="dvn_icon"/>
                                    <ice:outputText value=" You have access to restricted files in this study. Please click 'Cancel' button to go back to study page to view the study files."/>
                                </div>
                                <div jsfc="ice:panelGroup" id="layoutPanel3" styleClass="vdcStudyFilesContent" rendered="#{FileRequestPage.studyUI.anyFileRestricted}">
                                    <div jsfc="ice:panelGroup" styleClass="dvn_margin12 dvnInformationMessage">
                                        <div class="dvnMsgBlockContainer">
                                            <p><ice:outputText value="Please select the restricted study files that you wish to have access to." escape="false"/></p>
                                        </div>
                                    </div>
                                    <ice:dataTable cellpadding="0" cellspacing="0" value="#{FileRequestPage.studyUI.categoryUIList}" id="catDataTable" var="catUI" width="100%">
                                        <ice:column id="catColumn">
                                            <div class="TogglePaneFancy">
                                                <div jsfc="ice:panelGroup" id="groupPanel4" styleClass="vdcStudyFilesCat" rendered="#{catUI.isAnyFileRestricted()}">
                                                    <div jsfc="ice:panelGroup" styleClass="vdcStudyFilesCatLabel">
                                                        <ice:selectBooleanCheckbox id="catCheckBox" styleClass="catCheckBox" onclick="toggleCheckBoxes(this);"/>
                                                        <ice:outputText id="outputText16" value="#{catUI.category}"/>
                                                    </div>
                                                </div>
                                                <div jsfc="ice:panelGroup" styleClass="TogglePaneContent vdcStudyFileTableWrap"> 
                                                    <ice:dataTable rendered="#{catUI.rendered}" cellpadding="0" cellspacing="0"
                                                                   id="fileDataTable" rowClasses="list-row-even,list-row-odd"
                                                                   value="#{catUI.studyFileUIs}" var="studyFileUI" width="100%">
                                                        <ice:column  rendered="#{studyFileUI.restrictedForUser}">
                                                            <ice:panelGrid columns="4" cellpadding="0" cellspacing="0" border="0" width="100%"
                                                                           columnClasses="vdcStudyFileCheckBox,vdcStudyFileInfo,vdcStudyFileDownload,vdcStudyFileDesc,
                                                                           vdcStudyFileSpacer,vdcStudyFileSubsetting,vdcStudyFileAnalysis,vdcStudyFileCitation">
                                                                <ice:column id="column10">
                                                                    <ice:inputHidden id="fileId" value="#{studyFileUI.studyFile.id}"/> 
                                                                    <ice:selectBooleanCheckbox id="fileCheckBox" styleClass="fileCheckBox" value="#{studyFileUI.selected}" onclick="toggleCheckBoxes(this)" />
                                                                </ice:column>
                                                                <ice:column id="column11">
                                                                    <div jsfc="ice:panelGroup" styleClass="vdcStudyFileRowFileInfo">
                                                                        <div jsfc="ice:panelGroup" styleClass="vdcStudyFileRowFileName">
                                                                            <ice:outputText id="outputText15" value="#{studyFileUI.fileMetadata.label}"/>
                                                                            <ice:inputHidden id="vdcIdforFile" value="#{studyFileUI.vdcId}"/>
                                                                        </div>
                                                                    </div>
                                                                </ice:column>
                                                                <ice:column id="column12">
                                                                    <div jsfc="ice:panelGroup" styleClass="vdcStudyFileRowFileDownload">
                                                                        <ice:outputText id="outputText16" value="#{studyFileUI.fileMetadata.description}"/>
                                                                    </div>
                                                                </ice:column>
                                                            </ice:panelGrid>
                                                        </ice:column>
                                                    </ice:dataTable>
                                                </div>
                                            </div>
                                        </ice:column>
                                    </ice:dataTable>
                                </div>
                                <div class="dvnFormPadding dvnFormMargin">
                                    <ice:inputHidden id="fileIdLists" value="#{FileRequestPage.fileIdList}"/>
                                    <ice:commandButton id="submitButton" value="Submit Request" action="#{FileRequestPage.generateRequest}" onclick="return sendFileRequest();"/>
                                    <ice:commandButton value="Cancel" action="#{FileRequestPage.cancel}"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </ice:form>
            </ui:define>
        </ui:composition>
    </h:body>
</html>